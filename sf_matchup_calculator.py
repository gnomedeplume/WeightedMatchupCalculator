from weighted_matchup_calculator import prob_to_odds, run_multiple_tournaments

sf_characters = [
    "Ryu",
    "Luke",
    "Kimberly",
    "Chun-Li",
    "Manon",
    "Zangief",
    "JP",
    "Dhalsim",
    "Cammy",
    "Ken",
    "Dee Jay",
    "Lily",
    "AKI",
    "Rashid",
    "Blanka",
    "Juri",
    "Marisa",
    "Guile",
    "Honda",
    "Jamie"
]

# Based on https://twitter.com/CatCammy6/status/1741134210654405055
sf_matchup_arrays = {
    "Ryu": [50,48.5,45.81,44.21,48.98,51.3,46.19,46.53,44.04,49.82,46.96,51.99,50.32,49.32,49.91,47.7,49.81,48.11,52.44,48.66],
    "Luke": [51.5,50,51.62,48.91,48.36,49.28,50.88,48.71,49.5,50.43,52.32,50.49,51.47,53.56,52.33,52.82,50.45,51.76,52.07,52.28],
    "Kimberly": [54.19,48.38,50,49.87,51.87,52.98,53.29,52.13,48.39,45.69,51.13,55.75,50.72,48.02,50.02,48.87,53.34,49.51,51.43,49.76],
    "Chun-Li": [55.79,51.09,50.13,50,51.86,49.43,48.18,49.76,49.19,51.88,50.37,46.71,49.3,51.31,48.66,53.7,50.95,51.01,51.55,50.16],
    "Manon": [51.02,51.64,48.13,48.14,50,53.63,45.85,46.82,52.83,47.96,48.53,48.23,50.03,50.64,46.43,48.72,49.11,49.15,49.67,49.82],
    "Zangief": [48.7,50.72,47.02,50.57,46.37,50,45.53,36.8,54.38,52.07,52.15,43.28,48.9,50.98,46.68,52.1,49.08,53.77,52.76,50.05],
    "JP": [53.81,49.12,46.71,51.82,54.15,54.47,50,42.09,47.34,51.02,51.08,53.78,54.02,48.75,50.54,48.45,54.36,54.44,56.13,53.97],
    "Dhalsim": [53.47,51.29,47.87,50.24,53.18,63.2,57.91,50,48.89,49.7,46.15,60.27,47.59,43.43,44.81,50.61,52.7,51.11,46.07,52.55],
    "Cammy": [55.96,50.5,51.61,50.81,47.17,45.62,52.66,51.11,50,50.38,47.3,51.68,48.96,51.61,43.56,50.24,49.01,52.68,46.3,50.86],
    "Ken": [50.18,49.57,54.31,48.12,52.04,47.93,48.98,50.3,49.62,50,49.15,51.18,50.03,50.09,51.58,52.71,52.97,49.06,54.78,48.71],
    "Dee Jay": [53.04,47.68,48.87,49.63,51.47,47.85,48.92,53.85,52.7,50.85,50,49.72,50.28,51.81,49.98,51.83,48.81,48.14,51.87,53.83],
    "Lily": [48.01,49.51,44.25,53.29,51.77,56.72,46.22,39.73,48.32,48.82,50.28,50,48.18,47.55,40.7,49.76,52.5,48.55,51.91,51.07],
    "AKI": [49.68,48.53,49.28,50.7,49.97,51.1,45.98,52.41,51.04,49.97,49.72,51.82,50,52.73,48.33,49.56,52.29,45.6,49.68,49.95],
    "Rashid": [50.68,46.44,51.98,48.69,49.36,49.02,51.25,56.57,48.39,49.91,48.19,52.45,47.27,50,50.25,52.37,51.94,49.69,50.83,51.56],
    "Blanka": [50.09,47.67,49.98,51.34,53.57,53.32,49.46,55.19,56.44,48.42,50.02,59.3,51.67,49.75,50,51.69,54.45,43.87,43.37,51.37],
    "Juri": [52.3,47.18,51.13,46.3,51.28,47.9,51.55,49.39,49.76,47.29,48.17,50.24,50.44,47.63,48.31,50,55.63,46.61,51.09,50.24],
    "Marisa": [50.19,49.55,46.66,49.05,50.89,50.92,45.64,47.3,50.99,47.03,51.19,47.5,47.71,48.06,45.55,44.37,50,53.32,52.02,50.7],
    "Guile": [51.89,48.24,50.49,48.99,50.85,46.23,45.56,48.89,47.32,50.94,51.86,51.45,54.4,50.31,56.13,53.39,46.68,50,50.35,53.71],
    "Honda": [47.56,47.93,48.57,48.45,50.33,47.24,43.87,53.93,53.7,45.22,48.13,48.09,50.32,49.17,56.63,48.91,47.98,49.65,50,51.19],
    "Jamie": [51.34,47.72,50.24,49.84,50.18,49.95,46.03,47.45,49.14,51.29,46.17,48.93,50.05,48.44,48.63,49.76,49.3,46.29,48.81,50]
}

# Convert the matchup chart above to be a nested dictionary
def get_sf_matchup_chart():
    matchup_chart = {}
    for index1, me in enumerate(sf_characters):
        matchup_chart[me] = {
            you: prob_to_odds(sf_matchup_arrays[me][index] / 100)
            for index, you in enumerate(sf_characters)
        }
    return matchup_chart
    
def sort_dictionary(dictionary):
    return dict(sorted(dictionary.items(), key=lambda item: item[1], reverse=True))
    
def main():
    matchup_chart = get_sf_matchup_chart()
    
    (char_distribution, weighted_odds, average_char_distribution, average_weighted_odds) = run_multiple_tournaments(matchup_chart, 30, sf_characters)
    
    # Sort
    char_distribution = sort_dictionary(average_char_distribution)
    weighted_odds = sort_dictionary(average_weighted_odds)
    
    print("Type Distributions (in a 10,000 person tournament)")
    for key, value in char_distribution.items():
        # print(f"{key}: {oct(int(value * 512))} / 0o1000")
        print(f"{key}: {round(value*10000)}")

    print()
    print("Weighted Odds")
    for key, value in weighted_odds.items():
        # print(f"{key}: {oct(int(value * 512))} : 0o1000")
        print(f"{key}: {value:.3f}:1")

if __name__ == "__main__":
    main()